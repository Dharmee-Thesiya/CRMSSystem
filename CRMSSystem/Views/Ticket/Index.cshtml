@using Kendo.Mvc.UI
@using CRMSSystem.Core.View
<!DOCTYPE html>
<html lang="en-us">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title> Systems </title>
    <link rel="stylesheet" href="~/Style/login.css">
</head>
<body>

    <div class="modal fade" tabindex="-1" role="dialog" id="AttachmentModal">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h2 class="modal-title">Download Attachment</h2>
                </div>
                <div class="modal-body">
                    <div id="AttachmentModalContent">
                    </div>
                </div>
                <div class="modal-footer">

                </div>
            </div>
        </div>
    </div>
    <div class="section">
        <div class="container">
            <div class="topTitleHead pb20">

            </div>
            <div class="tabContentDetails">
                <div class="tabcontent" style="display: block">
                    <div class="align-center align-between pb20">
                        <h3 style="color:black"><b>Ticket Management</b></h3>
                        <div class="k-d-flex k-justify-content-center" style="margin-left:45%;">
                            <div class="k-w-300">
                                <label for="status" style="font-size:15px;color:coral">Status</label><br />
                                @*for StatusFilter(dropdown)*@
                                @(Html.Kendo().DropDownList()
                      .Name("status")
                      .HtmlAttributes(new { style = "width:100%" })
                      .OptionLabel("Select Status")
                      .DataTextField("Name")
                      .DataValueField("Name")
                      .Events(e=>e.Change("onChange"))
                      .Filter("contains")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("StatusFilter", "Ticket");
                          });
                      })
                    )
                            </div>
                        </div>
                        <div class="btnDiv" style="margin-bottom:2px;">
                            <a href="#"> @Html.ActionLink("+ Add New Ticket", "Create", "Ticket")</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" tabindex="-1" role="dialog" id="deleteticket">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <img src="~/image/warning.png" style="height:60px;width:60px;margin-left:250px" />
                    <button type="button" class="close" data-dismiss="modal" aria-label="close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <h3> Are You Sure You Want To Delete?</h3>
                </div>
                <input type="hidden" id="hdnDeleteId" />
                <div class="modal-footer">
                    <div class="btn-group">
                        <a id="btnDelete" class="btn btn-primary" onclick="confirmdeleteticke()">Delete</a>
                    </div>
                    <div class="btn-group">
                        <a id="btncancelconfirm" class="btn btn-danger" data-dismiss="modal">Cancel</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>


@(Html.Kendo().Grid<TicketViewModel>
    ().Name("TicketGrid").Columns(columns =>
    {
        columns.Bound(c => c.Title);
        columns.Bound(c => c.Type);
        columns.Bound(c => c.Status);
        columns.Bound(c => c.Priority);
        columns.Bound(c => c.AssignTo);
        columns.Bound(c => c.AttachmentList).Hidden().ClientTemplate("<input type='hidden' id='hdn_#=Id#' value='#=AttachmentList#' />");
        columns.Bound(c => c.Attachment)
            .ClientTemplate("#if (AttachmentCount != 0)" + "{#" + "<a onclick='CheckValue(this)' id='#=Id#' ><button class='btn btn-primary'>#=AttachmentCount#</button></a>#}# ");

        columns.Template(c => c.Id).Title("Action")
                     .ClientTemplate(
                         " <a href='" + Url.Action("Edit", "Ticket") + "/#=Id#' )'><img src='/image/edit.svg'></a>" + " <a href='" + Url.Action("Detail", "Ticket") + "/#=Id#' )'><img src='/image/eye.svg'></a>");
        columns.Command(command => command.Custom("Delete").Click("ticketdelete")).Width(200);
    })


    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable(pageable=>
    {
        pageable.Refresh(true);
    })
    .NoRecords("No Record Found")
    .Scrollable()
    .HtmlAttributes(new { style = "height:550px;" })
    .Sortable()
    .Filterable()
    .Groupable()
    .DataSource(dataSource => dataSource.Ajax().Model(model => model.Id(p => p.Id)).Read(read => read.Action("GetTicket", "Ticket"))
    .PageSize(5))

    )

<br />
<button class="btn btn-default">
    @Html.ActionLink("Previous", "Index", "Admin")
</button>


<script>
    function CheckValue(e) {
        debugger;
        var grid = $("#TicketGrid").data("kendoGrid");
        var row = $(e).closest("tr");
        var item = grid.dataItem(row);
        var list = item.AttachmentList;
        if (list != null && list.length > 0) {
            var htmlData = '';
            for (let i = 0; i < list.length; i++) {
                htmlData += "<button class='btn btn-default'><a href='/Content/TicketAttachment/" + list[0].FileName + "' download>" + list[0].FileName + "</a></button><br/>"
            }
        }
        $("#AttachmentModalContent").html(htmlData);
        $("#AttachmentModal").modal('show')
    }

    var ticketdelete = function (e) {
        debugger;
        console.log(e)
        e.preventDefault();
        var d = this.dataItem($(e.currentTarget).closest("tr"));
        Id = d.Id;
        $("#deleteticket").modal('show');
        $("#hdnDeleteId").val(Id);
    }

    function confirmdeleteticke(Id) {
        debugger;
        var Id = $("#hdnDeleteId").val()
        $.ajax({

            type: "POST",
            url: "/Ticket/Delete/" + Id,
            success: function () {
                $("#deleteticket").modal('hide');
                $.ajax({
                    type: 'GET',
                    url: "/Ticket/Index",
                    success: function () {
                        location.reload()
                    }
                });
            }
        });
    }
</script>


<script>

    $(document).ready(function () {
        var url = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (var i = 0; i < url.length; i++) {
            var urlparam = url[i].split('=');
            if (urlparam[0] == "TypeName") {
                var name = urlparam[1];
                grid = $("#TicketGrid").data("kendoGrid");
                grid.dataSource.filter({ field: "Type", operator: "contains", value: name });
            }
        }
    });

    $(document).ready(function () {
        debugger;
        var url = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (var i = 0; i < url.length; i++) {
            var urlparam = url[i].split('=');
            if (urlparam[0] == "Status") {
                var name = urlparam[1];
                grid = $("#TicketGrid").data("kendoGrid");
                grid.dataSource.filter({ field: "status", operator: "contains", value: name });
            }
        }
    });

    function onChange(e) {
        var value = $("#status").val();
        grid = $("#TicketGrid").data("kendoGrid");
        if (value) {
            grid.dataSource.filter({ field: "status", operator: "contains", value: value });
        }
        else {
            grid.dataSource.filter({});
        }
    }
</script>

@Styles.Render("~/Content/StyleSheet1.css")