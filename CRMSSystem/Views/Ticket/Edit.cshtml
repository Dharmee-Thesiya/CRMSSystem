@model CRMSSystem.Core.View.TicketViewModel
@using (Html.BeginForm("Edit", "Ticket", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


    <!----- Form ---->
    <div class="formDiv">
        <div class="topTitleHead pb20">
            <h1>Edit Ticket</h1>
        </div>
        <div class="formSection">

            <div class="inputBox">
                @Html.ValidationSummary(true, "", new { @class = "errorMsg" })
                <div class="text text-danger">@ViewBag.Message</div>
                <label class="form-label">Title<strong style="color:red;font-size:20px">*</strong></label>
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Title" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "errorMsg" })
            </div>

            <div class="inputBox selectBox">
                <label class="form-label">Assign To<strong style="color: red; font-size: 20px">*</strong></label>
                @Html.DropDownListFor(model => model.AssignId, new SelectList(Model.AssignDropDown, "Id", "Name"), "Select AssignTo", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AssignId, "", new { @class = "errorMsg" })
            </div>

            <div class="inputBox selectBox">
                <label class="form-label">Type<strong style="color: red; font-size: 20px">*</strong></label>
                @Html.DropDownListFor(model => model.TypeId, new SelectList(Model.TypeDropDown, "Id", "Name"), "Select Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "errorMsg" })
            </div>

            <div class="inputBox selectBox">
                <label class="form-label">Priority<strong style="color: red; font-size: 20px">*</strong></label>
                @Html.DropDownListFor(model => model.PriorityId, new SelectList(Model.PriorityDropDown, "Id", "Name"), "Select Priority", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PriorityId, "", new { @class = "errorMsg" })
            </div>

            <div class="inputBox selectBox">
                <label class="form-label">Status<strong style="color: red; font-size: 20px">*</strong></label>
                @Html.DropDownListFor(model => model.StatusId, new SelectList(Model.StatusDropDown, "Id", "Name"), "Select Status", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "errorMsg" })
            </div>

            <div class="inputBox">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <input type="file" id="file" name="file" class="form-control" />
            </div>

            <div class="inputBox">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-10" })
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Description" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "errorMsg" })
            </div>
            <input type="hidden" id="hdnAttachmentDeleteId"  name="hdnAttachmentDeleteId"/>
            @if (Model.AttachmentList != null)
            {
                @Html.LabelFor(model => model.Attachment, htmlAttributes: new { @class = "control-label col-md-10" })

                foreach (var item in Model.AttachmentList)
                {
                    <div class="attachmentBox" id="@item.Id">

                        @Html.LabelFor(model => model.Attachment, item.FileName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Description" } })
                        <a href='/Content/TicketAttachment/@item.FileName' download><i class='glyphicon glyphicon-download'></i></a>
                        <i class='glyphicon glyphicon-trash' onclick="deletemultipleticket('@item.Id')"></i>
                    </div>
                }
            }

        </div>
        <div class="inputBox">
            <button class="btnDiv" id="Savebtn">Edit</button>
        </div>
    </div>
    <!----- END Form ---->

}

<button id="backToList">Previous</button>

<script>
    $(document).ready(function () {
        $('#backToList').click(function () {
            history.back();
        });
    });

    function deletemultipleticket(id) {
        debugger;
        let val = '';
        var ele = document.getElementById(id);
        ele.style.display = "none";
        if ($("#hdnAttachmentDeleteId").val() != '') {
             val = $("#hdnAttachmentDeleteId").val() + "," + id;
        }
        else {
            val = id;
        }
        $("#hdnAttachmentDeleteId").val(val);
    }


    $('#Savebtn').click(function () {
        toastr.success('Ticket Updated successfully.');
        document.location ='@Url.Action("Index", "Admin")';
    });
</script>