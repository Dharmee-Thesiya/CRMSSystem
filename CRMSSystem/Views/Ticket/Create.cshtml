@model CRMSSystem.Core.View.TicketViewModel
@using (Html.BeginForm("Create", "Ticket", FormMethod.Post))
{
    @Html.AntiForgeryToken()


    <!----- Form ---->
    <div class="formDiv">
        <div class="topTitleHead pb20">
            <h1> Add New Ticket</h1>
        </div>
        <div class="formSection">
            <div class="inputBox">
                @Html.ValidationSummary(true, "", new { @class = "errorMsg" })
                <div class="text text-danger">@ViewBag.Message</div>

                <label class="form-label">Title<strong style="color:red;font-size:20px">*</strong></label>
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Title" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "errorMsg" })

                @*<p class="errorMsg">This field is required</p>*@
            </div>
            <div class="inputBox selectBox">
                <label class="form-label">Assigned<strong style="color: red; font-size: 20px">*</strong></label>
                @Html.DropDownListFor(model => model.AssignTo, new SelectList(Model.AssignDropDown, "Id", "Name"), "Select AssignTo", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AssignTo, "", new { @class = "errorMsg" })
            </div>
            <div class="inputBox selectBox">
                <label class="form-label">Type<strong style="color: red; font-size: 20px">*</strong></label>
                @Html.DropDownListFor(model => model.Type, new SelectList(Model.TypeDropDown, "Id", "Name"), "Select Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "errorMsg" })


            </div>
            <div class="inputBox selectBox">
                <label class="form-label">Priority<strong style="color: red; font-size: 20px">*</strong></label>
                @Html.DropDownListFor(model => model.Priority, new SelectList(Model.PriorityDropDown, "Id", "Name"), "Select Priority", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "errorMsg" })

            </div>
            <div class="inputBox selectBox">
                <label class="form-label">Status<strong style="color: red; font-size: 20px">*</strong></label>

                @Html.DropDownListFor(model => model.Status, new SelectList(Model.StatusDropDown, "Id", "Name"), "Select Status", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "errorMsg" })

            </div>

            <div class="inputBox">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Description" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "errorMsg" })
            </div>
        </div>
        <div class="inputBox">
            <button class="btnDiv" id="Savebtn">Create</button>
        </div>
    </div>


    <!----- END Form ---->

}

<button id="backToList">Previous</button>

<script>
    $(document).ready(function () {
        $('#backToList').click(function () {
            history.back();
        });
    });

</script>