@model CRMSSystem.Core.View.FormsViewModel

@using (Html.BeginForm("Create", "Forms", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <!----- Form ---->
    <div class="formDiv">
        <div class="topTitleHead pb20">
            <h1> Add New Form</h1>
        </div>
        <div class="formSection">
            <div class="inputBox">
                @Html.ValidationSummary(true, "", new { @class = "errorMsg" })
                <div class="text text-danger">@ViewBag.Message</div>

                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "errorMsg" })

            </div>
            <div class="inputBox">
                @Html.LabelFor(model => model.NavigateURL, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.NavigateURL, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter NavigateURL" } })
                @Html.ValidationMessageFor(model => model.NavigateURL, "", new { @class = "errorMsg" })

            </div>
            <div class="inputBox selectBox">
                @Html.LabelFor(model => model.ParentFormID, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownListFor(model => model.ParentFormID, new SelectList(Model.ParentIdDropDown, "ParentFormId", "ParentFormName"), "Select ParentId", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ParentFormID, "", new { @class = "errorMsg" })
            </div>
            <div class="inputBox">
                @Html.LabelFor(model => model.DisplayIndex, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.DisplayIndex, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter DisplayIndex" } })
                @Html.ValidationMessageFor(model => model.DisplayIndex, "", new { @class = "errorMsg" })

            </div>
            <div class="inputBox">
                @Html.LabelFor(model => model.FormAccessCode, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.FormAccessCode, new { htmlAttributes = new { @class = "form-control",@style = "text-transform:uppercase", @placeholder = "Enter FormAccessCode" } })
                @Html.ValidationMessageFor(model => model.FormAccessCode, "", new { @class = "errorMsg" })

            </div>
        </div>
        <div class="inputBox">
            <button class="btnDiv">Create</button>
        </div>
    </div>


    <!----- END Form ---->
}

<button id="backToList">Back to List</button>

<script>
    $(document).ready(function () {
        $('#backToList').click(function () {
            history.back();
        });
    });
</script>